

real1 = @ODEmodel(
    x1'(t) = -k1 * x1(t) * x2(t) + k2 * x4(t) + 7*k4 * x6(t),
    x2'(t) = -k1 * x1(t) * x2(t) + k2 * x4(t) + k3 * x4(t),
    x3'(t) = k3 * x4(t) + k5 * x6(t) - k6 * x3(t) * x5(t),
    x4'(t) = k1 * x1(t) * x2(t) - k2 * x4(t) - k3 * x4(t),
    x5'(t) = k4 * x6(t) + k5 * x6(t) - k6 * x3(t) * x5(t),
    x6'(t) = -k4 * x6(t) - k5 * x6(t) + k6 * x3(t) * x5(t),
    y1(t) = x3(t)
)

test7 = @ODEmodel(
    x1'(t) = -x1(t)-2*x3(t)+x2(t)+x4(t)^2,
    x2'(t) = 2*x3(t)-x4(t)^2+x1(t)-x2(t),
    x3'(t) = -x1(t)+x2(t)-2*x3(t)+x4(t)^2,
    y1(t) = x1(t),
    y2(t) = x2(t),
    y3(t) = x3(t)
)



fraction1 = @ODEmodel(
    x1'(t) = -x1(t)//x2(t) + x2(t)//x1(t),
    x2'(t) = -x2(t)//x1(t) + x1(t)//x2(t),
    y1(t) = x1(t),
    y2(t) = x2(t)
)


fraction2 = @ODEmodel(
    x1'(t) = (-x1(t)-x2(t))//x4(t),
    x2'(t) = x2(t)//x4(t),
    x3'(t) = x1(t)//x4(t),
    x4'(t) = x4(t)
)

fraction3 = @ODEmodel(
    x1'(t) = x1(t)//x2(t),
    x2'(t) = x2(t)//x1(t)
)


real2 = @ODEmodel(
    S'(t) = -b * ln(t) * S(t) // (S(t) + L(t) + ln(t) + R(t) + Q(t)) - u(t) * S(t) // (S(t) + L(t) + ln(t) + R(t) + Q(t)),
    L'(t) = b * ln(t) * S(t) // (S(t) + L(t) + ln(t) + R(t) + Q(t)) - a * L(t),
    ln'(t) = a * L(t) - g * ln(t) + s * Q(t),
    R'(t) = u(t) * S(t) // (S(t) + L(t) + ln(t) + R(t) + Q(t)) + e * g * ln(t),
    Q'(t) = (1 - e) * g * ln(t) - s * Q(t),
    y1(t) = ln(t) // (S(t) + L(t) + ln(t) + R(t) + Q(t))
)

real3 = @ODEmodel(
    Sh'(t) = mh * (Sh(t) + Lh(t) + Ih(t) + Rh(t)) - bv * Sh(t) * Iv(t) // (Sh(t) + Lh(t) + Ih(t) + Rh(t)) - mh * Sh(t),
    Lh'(t) = bv * Sh(t) * Iv(t) // (Sh(t) + Lh(t) + Ih(t) + Rh(t)) - ah * Lh(t) - mh * Lh(t) ,
    Ih'(t) = ah * Lh(t) - gh * Ih(t) - mh * Ih(t),
    Rh'(t) = gh * Ih(t) - mh * Rh(t),
    Sv'(t) = mv * (Sv(t) + Lv(t) + Iv(t))- bh * Sv(t) * Ih(t) // (Sh(t) + Lh(t) + Ih(t) + Rh(t)) - mv * Sv(t),
    Lv'(t) = bh * Sv(t) * Ih(t) // (Sh(t) + Lh(t) + Ih(t) + Rh(t)) - av * Lv(t) - mv * Lv(t),
    Iv'(t) = av * Lv(t) - mv * Iv(t),
    y1(t) = Ih(t) // (Sh(t) + Lh(t) + Ih(t) + Rh(t))

)

yint = @ODEmodel(
    x1'(t) = -x1(t) + x2(t),
    x2'(t) = x1(t),
    y1(t) = x1(t) - x2(t)
)